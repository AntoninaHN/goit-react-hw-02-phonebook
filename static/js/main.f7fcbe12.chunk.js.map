{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","reportWebVitals.js","index.js","App.module.css","components/Filter/Filter.module.css"],"names":["module","exports","button","label","input","form","section","list","ContactForm","state","name","number","onHandleChange","e","_e$target","target","value","_this","setState","Object","defineProperty","onHandleSubmit","preventDefault","props","onSubmitContact","objectSpread2","reset","react_default","a","createElement","onSubmit","this","className","styles","message","type","onChange","pattern","title","required","Component","Filter","_ref","onInput","ContactList","contacts","onRemoveContact","contact","map","_ref2","id","key","onClick","defaultProps","App","filter","searchName","find","item","toUpperCase","formSubmitHandler","data","alert","concat","nanoid","toConsumableArray","changeFilter","currentTarget","getVisibleContacts","_this$state","toLowerCase","includes","removeContact","contactId","visibleContacts","components_ContactForm_ContactForm","Filter_Filter","ContactList_ContactList","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"2EACAA,EAAAC,QAAA,CAAkBC,OAAA,4BAAAC,MAAA,2BAAAC,MAAA,2BAAAC,KAAA,+CCAlBL,EAAAC,QAAA,CAAkBK,QAAA,6BAAAC,KAAA,0BAAAL,OAAA,wNC+DHM,8MA1DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,MAEVC,eAAiB,SAACC,GAChB,IAAAC,EAAwBD,EAAEE,OAAlBL,EAARI,EAAQJ,KAAMM,EAAdF,EAAcE,MACdC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBT,EAAOM,OAE1BK,eAAiB,SAACR,GAChBA,EAAES,iBACFL,EAAKM,MAAMC,gBAAXL,OAAAM,EAAA,EAAAN,CAAA,GAAgCF,EAAKR,QACrCQ,EAAKS,WAEPA,MAAQ,WACNT,EAAKC,SAAS,CAAER,KAAM,GAAIC,OAAQ,kDAEpC,WACE,OACEgB,EAAAC,EAAAC,cAAA,QAAMC,SAAUC,KAAKV,eAAgBW,UAAWC,IAAO5B,MACrDsB,EAAAC,EAAAC,cAAA,SAAOG,UAAWC,IAAO9B,OACvBwB,EAAAC,EAAAC,cAAA,QAAMG,UAAWC,IAAOC,SAAxB,QACAP,EAAAC,EAAAC,cAAA,SACEM,KAAK,OACLC,SAAUL,KAAKnB,eACfF,KAAK,OACLM,MAAOe,KAAKtB,MAAMC,KAClBsB,UAAWC,IAAO7B,MAClBiC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAIZZ,EAAAC,EAAAC,cAAA,SAAOG,UAAWC,IAAO9B,OACvBwB,EAAAC,EAAAC,cAAA,QAAMG,UAAWC,IAAOC,SAAxB,UACAP,EAAAC,EAAAC,cAAA,SACEM,KAAK,MACLnB,MAAOe,KAAKtB,MAAME,OAClByB,SAAUL,KAAKnB,eACfF,KAAK,SACLsB,UAAWC,IAAO7B,MAClBiC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAIZZ,EAAAC,EAAAC,cAAA,UAAQM,KAAK,SAASH,UAAWC,IAAO/B,QAAxC,uBAhDkBsC,6BCsBXC,MAvBf,SAAAC,GAAqC,IAAnB1B,EAAmB0B,EAAnB1B,MAAOoB,EAAYM,EAAZN,SACvB,OACET,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,MAAIG,UAAWC,IAAOK,OAAtB,wBACAX,EAAAC,EAAAC,cAAA,SACEM,KAAK,OACLnB,MAAOA,EACP2B,QAASP,EACTJ,UAAWC,IAAO7B,MAClBM,KAAK,OACL2B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,wBCblB,SAASK,EAATF,GAAoD,IAA7BG,EAA6BH,EAA7BG,SAAUC,EAAmBJ,EAAnBI,gBACzBC,EAAUF,EAASG,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,GAAIxC,EAAPuC,EAAOvC,KAAMC,EAAbsC,EAAatC,OAAb,OAC3BgB,EAAAC,EAAAC,cAAA,MAAIsB,IAAKD,EAAIlB,UAAWC,IAAO1B,MAC7BoB,EAAAC,EAAAC,cAAA,YAAOnB,EAAI,MAAWC,GACtBgB,EAAAC,EAAAC,cAAA,UACEG,UAAWC,IAAO/B,OAClBiC,KAAK,SACLzB,KAAK,QACL0C,QAAS,kBAAMN,EAAgBI,KAJjC,aAUJ,OAAOvB,EAAAC,EAAAC,cAAA,UAAKkB,GAGdH,EAAYS,aAAe,CACzBR,SAAU,IAaGD,wBCkCAU,8MA7Db7C,MAAQ,CACNoC,SAAU,CACR,CAAEK,GAAI,OAAQxC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEuC,GAAI,OAAQxC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEuC,GAAI,OAAQxC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEuC,GAAI,OAAQxC,KAAM,iBAAkBC,OAAQ,cAEhD4C,OAAQ,MAEVC,WAAa,SAACxC,GACZ,OAAOC,EAAKR,MAAMoC,SAASY,KACzB,SAACC,GAAD,OAAUA,EAAKhD,KAAKiD,gBAAkB3C,EAAM2C,mBAGhDC,kBAAoB,SAACC,GACnB,IAAQnD,EAASmD,EAATnD,KACR,GAAIO,EAAKuC,WAAW9C,GAClBoD,MAAK,GAAAC,OAAIrD,EAAJ,gCACA,CACL,IAAMqC,EAAO5B,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAA,GAAQ0C,GAAR,IAAcX,GAAIc,gBAC/B/C,EAAKC,SAAS,SAACT,GAAD,MAAY,CAAEoC,SAAQ,GAAAkB,OAAA5C,OAAA8C,EAAA,EAAA9C,CAAMV,EAAMoC,UAAZ,CAAsBE,WAG9DmB,aAAe,SAACrD,GACdI,EAAKC,SAAS,CAAEqC,OAAQ1C,EAAEsD,cAAcnD,WAE1CoD,mBAAqB,WACnB,IAAAC,EAA6BpD,EAAKR,MAA1BoC,EAARwB,EAAQxB,SAAUU,EAAlBc,EAAkBd,OAClB,OAAKA,EAGEV,EAASU,OAAO,SAACV,GAAD,OACrBA,EAASnC,KAAK4D,cAAcC,SAAShB,EAAOe,iBAHrCzB,KAOX2B,cAAgB,SAACC,GACfxD,EAAKC,SAAS,SAACT,GAAD,MAAY,CACxBoC,SAAUpC,EAAMoC,SAASU,OAAO,SAACR,GAAD,OAAaA,EAAQG,KAAOuB,oDAIhE,WACE,IAAMC,EAAkB3C,KAAKqC,qBAE7B,OACEzC,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,IAAO3B,SACrBqB,EAAAC,EAAAC,cAAA,MAAIG,UAAWC,IAAOK,OAAtB,aACAX,EAAAC,EAAAC,cAAC8C,EAAD,CAAanD,gBAAiBO,KAAK6B,oBAEnCjC,EAAAC,EAAAC,cAAA,MAAIG,UAAWC,IAAOK,OAAtB,YACAX,EAAAC,EAAAC,cAAC+C,EAAD,CAAQ5D,MAAOe,KAAKtB,MAAM8C,OAAQnB,SAAUL,KAAKmC,eACjDvC,EAAAC,EAAAC,cAACgD,EAAD,CACEhC,SAAU6B,EACV5B,gBAAiBf,KAAKyC,wBAvDdhC,aCKHsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAApE,EAAA,GAAAqE,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAxC,GAAiD,IAA9C0C,EAA8C1C,EAA9C0C,OAAQC,EAAsC3C,EAAtC2C,OAAQC,EAA8B5C,EAA9B4C,OAAQC,EAAsB7C,EAAtB6C,OAAQC,EAAc9C,EAAd8C,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCCdU,IAASC,OACP/D,EAAAC,EAAAC,cAACF,EAAAC,EAAM+D,WAAP,KACEhE,EAAAC,EAAAC,cAAC+D,EAAD,OAEFC,SAASC,eAAe,SAM1BhB,uBCjBA9E,EAAAC,QAAA,CAAkBqC,MAAA,uCCAlBtC,EAAAC,QAAA,CAAkBG,MAAA,sBAAAkC,MAAA","file":"static/js/main.f7fcbe12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__1MLZK\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"form\":\"ContactForm_form__1fuOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactList_section__3fuU2\",\"list\":\"ContactList_list__2T7aG\",\"button\":\"ContactList_button__1RuFy\"};","import React, { Component } from \"react\";\n// import React from \"react\";\nimport styles from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  onHandleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n  onHandleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmitContact({ ...this.state });\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    return (\n      <form onSubmit={this.onHandleSubmit} className={styles.form}>\n        <label className={styles.label}>\n          <span className={styles.message}>Name</span>\n          <input\n            type=\"text\"\n            onChange={this.onHandleChange}\n            name=\"name\"\n            value={this.state.name}\n            className={styles.input}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label className={styles.label}>\n          <span className={styles.message}>Number</span>\n          <input\n            type=\"tel\"\n            value={this.state.number}\n            onChange={this.onHandleChange}\n            name=\"number\"\n            className={styles.input}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmitContact: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction Filter({ value, onChange }) {\n  return (\n    <div>\n      <label>\n        <h2 className={styles.title}>Find contact by name</h2>\n        <input\n          type=\"text\"\n          value={value}\n          onInput={onChange}\n          className={styles.input}\n          name=\"name\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n    </div>\n  );\n}\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n\n//r\n","import React from \"react\";\nimport styles from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction ContactList({ contacts, onRemoveContact }) {\n  const contact = contacts.map(({ id, name, number }) => (\n    <li key={id} className={styles.list}>\n      <span>{name + ` : ` + number}</span>\n      <button\n        className={styles.button}\n        type=\"button\"\n        name=\"delte\"\n        onClick={() => onRemoveContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  ));\n  return <ul>{contact}</ul>;\n}\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport styles from \"./App.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  searchName = (value) => {\n    return this.state.contacts.find(\n      (item) => item.name.toUpperCase() === value.toUpperCase()\n    );\n  };\n  formSubmitHandler = (data) => {\n    const { name } = data;\n    if (this.searchName(name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const contact = { ...data, id: nanoid() };\n      this.setState((state) => ({ contacts: [...state.contacts, contact] }));\n    }\n  };\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    if (!filter) {\n      return contacts;\n    }\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((state) => ({\n      contacts: state.contacts.filter((contact) => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className={styles.section}>\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm onSubmitContact={this.formSubmitHandler} />\n\n        <h2 className={styles.title}>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onRemoveContact={this.removeContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//import React from \"react\";\nimport React from \"react\";\n\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n//import \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__-GfWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\",\"title\":\"Filter_title__mtLuE\"};"],"sourceRoot":""}